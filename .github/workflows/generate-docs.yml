name: Generate Documentation

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  generate-readme:
    name: Generate README.md
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm run test:coverage
        continue-on-error: true

      - name: Generate README
        uses: ./.github/actions/generate-readme
        with:
          template-path: ".github/templates/README.template.md"
          output-path: "README.md"

      - name: Check for changes
        id: git-check
        run: |
          git diff --exit-code README.md || echo "changed=true" >> $GITHUB_OUTPUT

      - name: Commit README
        if: steps.git-check.outputs.changed == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add README.md
          git commit -m "docs: auto-generate README.md [skip ci]"

      - name: Push changes
        if: steps.git-check.outputs.changed == 'true' && github.event_name != 'pull_request'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

  generate-review:
    name: Generate Code Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        id: lint
        run: |
          npm run lint > lint-output.txt 2>&1 || true
          echo "errors=$(grep -c 'error' lint-output.txt || echo '0')" >> $GITHUB_OUTPUT
          echo "warnings=$(grep -c 'warning' lint-output.txt || echo '0')" >> $GITHUB_OUTPUT

      - name: Run tests
        id: test
        run: |
          npm test -- --json --outputFile=test-results.json || true
          echo "results=$(cat test-results.json)" >> $GITHUB_OUTPUT

      - name: Calculate coverage
        id: coverage
        run: |
          npm run test:coverage -- --json --outputFile=coverage-output.json || true
          if [ -f coverage/coverage-summary.json ]; then
            coverage=$(node -e "const c = require('./coverage/coverage-summary.json'); console.log(c.total.statements.pct)")
            echo "percentage=$coverage" >> $GITHUB_OUTPUT
          else
            echo "percentage=0" >> $GITHUB_OUTPUT
          fi

      - name: Get changed files
        id: changed-files
        run: |
          echo "files=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | wc -l)" >> $GITHUB_OUTPUT
          echo "additions=$(git diff --shortstat ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep -oP '\d+(?= insertion)' || echo '0')" >> $GITHUB_OUTPUT
          echo "deletions=$(git diff --shortstat ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep -oP '\d+(?= deletion)' || echo '0')" >> $GITHUB_OUTPUT

      - name: Generate Code Review
        uses: ./.github/actions/generate-review
        with:
          template-path: ".github/templates/REVIEW.template.md"
          output-path: "REVIEW.md"
          coverage: ${{ steps.coverage.outputs.percentage }}
          lint-errors: ${{ steps.lint.outputs.errors }}
          lint-warnings: ${{ steps.lint.outputs.warnings }}
          files-changed: ${{ steps.changed-files.outputs.files }}
          lines-added: ${{ steps.changed-files.outputs.additions }}
          lines-deleted: ${{ steps.changed-files.outputs.deletions }}

      - name: Upload Review as artifact
        uses: actions/upload-artifact@v4
        with:
          name: code-review
          path: REVIEW.md

      - name: Comment PR with Review
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const review = fs.readFileSync('REVIEW.md', 'utf8');

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ðŸ“‹ Automated Code Review\n\n${review.substring(0, 65000)}\n\n[View full review in artifacts]`
            });
