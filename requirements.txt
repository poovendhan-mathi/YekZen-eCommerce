🛍️ YekZen – Premium eCommerce Web Application

A modern, luxury-inspired eCommerce web app (Amazon-like) featuring smooth animations, dual payment systems (Stripe + Razorpay UPI), Firebase backend, and mock testing for development.

⚙️ Tech Stack Overview
Layer	Tool	Purpose
Framework	Next.js (React)	Routing + SEO + SSR
Styling	Tailwind CSS	Utility-first design system
Animations	Framer Motion	Page + component animations
Auth / DB	Firebase Firestore + Auth	Product, user, order data
Payments	Stripe (global) + Razorpay (India)	Secure checkout flow
Hosting	Vercel	Free, production-ready hosting
Media	Cloudinary	Free-tier image hosting
Mocking	Local JSON + Mock Payments	Offline development support
🧭 Project Vision

YekZen is a premium eCommerce platform for modern brands and users:

Elegant design with animated cards & gradients

Smooth transitions between pages

Dual payment system for global + Indian audiences

Fast Firebase backend

Fully free deployment pipeline

🧩 Project Structure
/components
  /layout
    Header.jsx
    Footer.jsx
    Navbar.jsx
  /cards
    ProductCard.jsx
  /payments
    StripeCheckoutButton.jsx
    RazorpayButton.jsx
  /mock
    MockProductGrid.jsx
  /ui
    Button.jsx
    Input.jsx

/pages
  index.jsx
  product/[id].jsx
  cart.jsx
  checkout.jsx
  success.jsx
  cancel.jsx

/api
  /payments
    create-stripe-session.js
    create-razorpay-order.js

/firebase
  config.js

/mock
  products.json

💡 Mock Data Setup

Use /mock/products.json for offline development:

[
  {
    "id": "p001",
    "name": "Wireless Headphones",
    "price": 129.99,
    "image": "/mock-images/headphones.jpg",
    "rating": 4.8,
    "category": "Audio",
    "description": "Premium sound with noise cancellation."
  },
  {
    "id": "p002",
    "name": "Smartwatch Series 7",
    "price": 299.0,
    "image": "/mock-images/smartwatch.jpg",
    "rating": 4.7,
    "category": "Wearables",
    "description": "Elegant design with health tracking."
  }
]


🧠 Copilot Prompt Example:

“Render mock products from products.json as gradient animated cards using Framer Motion.”

💳 Payments Integration
Stripe (Global / Test Mode)

Create free account: https://dashboard.stripe.com/test/apikeys

Add keys to .env.local:

STRIPE_SECRET_KEY=sk_test_*******
STRIPE_PUBLISHABLE_KEY=pk_test_*******


🧠 Copilot Prompt Example:

“Create an API route /api/payments/create-stripe-session that accepts cart items and returns a Stripe checkout session URL.”

Stripe Test Cards

Purpose	Card Number	Result
Success	4242 4242 4242 4242	Payment succeeds
Decline	4000 0000 0000 0002	Payment fails
3D Secure	4000 0027 6000 3184	Requires auth

Use any future expiry date (MM/YY) and any 3-digit CVC.

Razorpay (UPI – India)

Create a test account at https://razorpay.com

Add keys to .env.local:

RAZORPAY_KEY_ID=rzp_test_*******
RAZORPAY_KEY_SECRET=*******


🧠 Copilot Prompt Example:

“Add Razorpay checkout button for Indian users that opens the test UPI popup and records payment success.”

Razorpay UPI Test IDs

Purpose	UPI ID	Result
Success	success@razorpay	Always success
Failure	failure@razorpay	Simulates failure
Pending	pending@razorpay	Simulates delay
🧪 Mock Payment Flow

For offline development, simulate a fake payment process.

🧠 Copilot Prompt Example:

“Create a mock payment function that waits 2 seconds, shows success animation, and stores mock order in Firestore or localStorage.”

Example Flow

Click “Mock Pay”

Wait 2 seconds → success animation (Framer Motion)

Save fake order:

{
  id: "order-001",
  user: "mock@yekzen.dev",
  total: 229.99,
  method: "Mock",
  status: "Success"
}

🔐 Firebase Setup (Free Tier)

Go to Firebase Console
:

Create a project “YekZen”

Enable Authentication → Email/Password

Enable Firestore Database

Add config to /firebase/config.js
(Copilot can generate this automatically.)

Example:

// firebase/config.js
// Goal: Setup Firebase App, Firestore, and Auth for YekZen

🧑‍💻 Developer Test Credentials
Purpose	Account	Password	Notes
Mock Admin	admin@yekzen.dev	admin123	Use for testing orders
Mock User	demo@yekzen.dev	demo123	Use for checkout test
Firebase User (Dev)	test@yekzen.dev	password123	Safe for Firestore read/write
Stripe Mode	4242 4242 4242 4242	Any Expiry/CVC	Test success flow
Razorpay UPI	success@razorpay	—	Test Indian UPI success
Razorpay Fail	failure@razorpay	—	Simulate failed payment
Localhost Mock	yarn dev	—	Simulates checkout success in mock mode

(These credentials are for development & demo only — no sensitive data.)

🧠 Copilot Prompt Library

Copy these as comment blocks in your files to guide Copilot precisely:

// Goal: Create a premium animated Navbar with YekZen logo, search, and cart icon.
// Goal: Display mock products in animated card grid using TailwindCSS and Framer Motion.
// Goal: Add responsive checkout page with both Stripe and Razorpay payment buttons.
// Goal: Implement mock payment button for offline dev testing.
// Goal: Animate success page with confetti or glow effect.
// Goal: Store order details in Firestore or mock local JSON after successful payment.

🧾 Hosting Setup (Free)
Frontend (Vercel)

Push to GitHub → YekZen repo

Go to vercel.com
 → Import project

Add environment variables (Stripe + Razorpay + Firebase)

Deploy automatically (CI/CD enabled)

Backend / Auth (Firebase)

Firestore + Auth remain on Firebase free-tier

Auto-scales for small projects

🗓️ Development Roadmap
Week	Task	Result
1	Setup Next.js + Tailwind + Firebase	Base app ready
2	Build layout + mock products	Home + product grid
3	Add cart + local state	Cart page working
4	Integrate Stripe payments	Global checkout
5	Integrate Razorpay UPI	Indian checkout
6	Add mock payments for dev	Offline flow
7	Add Auth + Firestore orders	User accounts
8	Polish + deploy	Live version
🌟 Final Features

✅ Premium UI with gradient & animation
✅ Stripe + Razorpay dual payments
✅ Mock + test flows for dev
✅ Firebase Auth + Firestore
✅ Framer Motion page transitions
✅ Free hosting (Vercel)
✅ Mock data + fake checkout for Copilot dev